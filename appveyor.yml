environment:
  global:
    RUST_VERSION: stable
    CRATE_NAME: katwebx
  matrix:
    # TODO: Figure out why listenfd breaks these targets.
    # - TARGET: i686-pc-windows-gnu
    # - TARGET: x86_64-pc-windows-gnu
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc
install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V
test_script:
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% --release
    )
before_deploy:
  - ps: ci\before_deploy.ps1
deploy:
  artifact: /.*\.zip/
  auth_token:
    secure: WTwAqePO6+2C5IPsN1fGRpGaUvoNrNtGXvayMU+xWsjbSd3Owpl/IW5S3wegLSJw
  description: ''
  on:
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub
cache:
  - C:\Users\appveyor\.cargo\registry
  - target
branches:
  only:
    - /^v\d+\.\d+\.\d+.*$/
    - master
notifications:
  - provider: Email
    on_build_success: false
build: false
